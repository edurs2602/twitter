name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.build.outputs.artifact-path }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' 

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install build tools and project deps
      run: |
        python -m pip install --upgrade pip
        pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build project
      id: build
      run: |
        python -m build --sdist --wheel
        echo "artifact-path=dist" >> "$GITHUB_OUTPUT"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-artifacts
        path: dist/*

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python 3.x
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-artifacts
        path: dist

    - name: Install package and test deps
      run: |
        python -m pip install --upgrade pip
        pip install dist/*.whl
        pip install coverage            # opcional, mas útil para métricas

    - name: Run tests with coverage (Django)
      env:
        DJANGO_SETTINGS_MODULE: twitter.settings        # seu módulo de settings
        PYTHONPATH: "${{ github.workspace }}"
      run: |
        coverage run manage.py test tests --pattern="*_tests.py" -v 2
        coverage xml -i
